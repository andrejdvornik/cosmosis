#This is a template for sampler description files
name: "cosmopower_train"
version: "1.0"
parallel: serial
purpose: "Train the CosmoPower emulator for the desired quantity."
url: "https://github.com/cosmosis-developers/cosmosis"
attribution: [CosmoSIS Team]
cite: []
explanation: >
    This is a "sampler" to train the CosmoPower emulator for the desired quantity.
    It uses the outputs from a Latin Hypercube sampler to get the training and testing data.
    The main parameters for this sampler are whether to run in training or testing mode, the name
    for saving the outputs, and whether to generate plots of the training and testing results.

installation: >
    The latest version of the cosmopower package must be installed.

# List of configuration options for this sampler
params:
    fatal_errors:  (bool; default=N) Any errors in the pipeline trigger an immediate failure so you can diagnose errors
    save_dir: (string; default='') Save all the data computed in the pipeline to this directory (can also end with .tgz to get a zipped form)
    TF_ENABLE_ONEDNN_OPTS: (int; default=0) Set to 1 to enable oneDNN optimizations in TensorFlow (may improve performance on some CPUs)
    CUDA_VISIBLE_DEVICES: (string; default='0') Set to the GPU id(s)
    np_seed: (int; default=1) Random seed for numpy
    tf_seed: (int; default=2) Random seed for TensorFlow
    save_dir: (string; default='') Directory to save the trained neural network and plots
    samples_name: (string; default='samples') Base name for the files generated by the Latin Hypercube sampler containing the training and testing samples
    tests_name: (string; default='tests') Base name for the files generated by the Latin Hypercube sampler containing the testing samples